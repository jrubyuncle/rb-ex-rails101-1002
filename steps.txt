
rails new first-app
rails g scaffold topic title:string description:text
                 -----
                   +----> singular -> model: topic.rb
                                      topics_controller.rb
                                      table: topics
rake db:migrate
rails s
connect to http://localhost:3000/topics

add 'welcome' action in topics_controller.rb

in routes.rb, add
  get 'welcome', to: 'topics#welcome'

create app/views/topics/welcome.html.erb
  <h1>Hello World! (welcome.html)</h1>

in routes.rb, add
  root 'topics#index'

1.2.1
  1. in Gemfile, add
       gem 'bootstrap-sass'
  2. run 'bundle'

1.2.2
  1. cd app/assets/stylesheets
     mv application.css  application.css.scss

  2. in application.css.scss, add
       @import "bootstrap-sprockets";
       @import "bootstrap";

  3. re-run 'rails s'

1.2.3
  1. mkdir app/views/common

  2. create app/views/common/_navbar.html.erb
            app/views/common/_footer.html.erb

  3. in application,js, add
       //= require bootstrap/dropdown
       //= require bootstrap/alert

1.2.4
  1. in application.html.erb, add
       <%= render "common/navbar" %>
       <%= render "common/footer" %>

1.2.5
  1. in app/views/topics/index.html.erb
       <table class="table">

1.2.5-a fix bug that the style not changes
  1. mv app/assets/stylesheets/application.css app/assets/stylesheets/application.css.scss

ch2.1
  1. goal: 建置一個 Rails 專案 ( 版本 4.2.0 )
           安裝 gem: brakeman 跟 rails_best_practices
  2. gem i brakeman
     gem i rails_bets_practices

ch2.1
  1. make sure that ruby version is 2.1.2
       ruby -v

  2. make sure that rails version is 4.2.0
       gem install rails -v 4.2.0 --verbose

  3. create new project
       rails _4.2.0_ rails101s -T

ch3.1
  1. 本章的作業目標：

     建立一個討論版 (group)
     group 有 title 跟 description 二個欄位
     設定 routes 並建立首頁 => hello world!
     套入前端套件 Bootstrap
     建立 navbar 與 footer
     建立 notice_message

ch3.2-a
  1. rails g controller groups

ch3.2-b
  2. rails g model group title:string description:text

ch3.2-c
  1. rake db:migrate

ch3.3
  1. in routes.rb, add
       root 'groups#index'
       resource 'groups'

  2. in groups_controller.rb, add
       def index
       end

  3. in app/views/groups/, create index.html.erb
       <h1>Hello World</h1>

ch3.4
  1. in Gemfile, add
       gem 'bootstrap-sass'                    // sAss

  2. run 'bundle install'
     保持一個原則： 動到除了 app 資料夾以外的檔案，都要重跑 rails s

  3. cd app/assets/stylesheets
     mv application.css application.css.scss   // css -> Scss

  4. in application.css.scss, add
       @import "bootstrap-sprockets";
       @import "bootstrap";

ch3.5
  1. create new folder 'common' under app/views/

  2. in folder app/views/common, create
       _navbar.html.erb
       _footer.html.erb

  3. _navbar.html.erb

       <nav class="navbar navbar-default" role="navigation">
         <div class="container-fluid">
           <div class="navbar-header">
             <a class="navbar-brand" href="/">Rails 101s</a>
           </div>
           <div class="collapse navbar-collapse">
             <ul class="nav navbar-nav navbar-right">
               <li> <%= link_to("登入", '#') %> </li>
             </ul>
           </div>
         </div>
       </nav>

  4. _footer.html.erb

       <nav class="navbar navbar-default" role="navigation">
         <div class="container-fluid">
           <div class="navbar-header">
             <a class="navbar-brand" href="/">Rails 101s</a>
           </div>
           <div class="collapse navbar-collapse">
             <ul class="nav navbar-nav navbar-right">
               <li> <%= link_to("登入", '#') %> </li>
             </ul>
           </div>
         </div>
       </nav>

  5. in app/assets/javascripts/application.js
       //= require turbolinks
       //= require bootstrap/dropdown    <--- add
       //= require bootstrap/alert       <--- add
       //= require_tree .

  6. in app/views/layouts/application.html.erb
       <%= render "common/navbar" %>     <--- add
       <%= yield %>
       <%= render "common/footer" %>     <--- add

ch3.6
  1. in app/helpers/application_helper/rb, add

       def notice_message
         alert_types = { notice: :success, alert: :danger }
       
         close_button_options = { class: "close", "data-dismiss" => "alert", "aria-hidden" => true }
         close_button = content_tag(:button, "×", close_button_options)
       
         alerts = flash.map do |type, message|
           alert_content = close_button + message
       
           alert_type = alert_types[type.to_sym] || type
           alert_class = "alert alert-#{alert_type} alert-dismissable"
       
           content_tag(:div, alert_content, class: alert_class)
         end
       
         alerts.join("\n").html_safe
       end

  2. in app/views/layouts/application.html.erb

       <%= render "common/navbar" %>
       <%= notice_message %>            <--- add
       <%= yield %>
       <%= render "common/footer" %>

  3. in index method of groups_controller.rb

       def index
         flash[:notice] = "good morning"
         flash[:warning] = "this is warning"
         flash[:my_test] = "my_test"
       end

ch4.1
  1. goal
       安裝 gem "simple_form"
       不用 Scaffold 實作出有 CRUD 功能的 group
       連前端網頁部分也做完
       資料驗證 => title 欄位不能空白

ch4.2
  1. in Gemfile, add
       gem 'simple_form'

  2. run 'bundle install'

  3. rails g simple_form:install --bootstrap

ch4.3

  1. in groups_controller.rb, add
       def show
       end
       
       def new
       end
       
       def create
       end
       
       def edit
       end
       
       def update
       end
       
       def destroy
       end

